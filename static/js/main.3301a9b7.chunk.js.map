{"version":3,"sources":["icon/zero.jpg","icon/cross.jpg","Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","useState","board","setBoard","player","setPlayer","winner","setWinner","handlePress","row","column","newBoard","slice","undefined","isGameOvered","rowCrossed","columnCrossed","digonalCrossed","getBoxView","src","Zero","alt","width","height","Cross","i","j","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3301a9b7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zero.1fccb490.jpg\";","export default __webpack_public_path__ + \"static/media/cross.9e3da191.jpg\";","import React, { useState } from 'react';\r\nimport Zero from './icon/zero.jpg';\r\nimport Cross from './icon/cross.jpg';\r\n\r\nconst Game = () =>{\r\n    const [board, setBoard] = useState([[],[],[]]);\r\n    const [player, setPlayer] = useState(0);\r\n    const [winner, setWinner] = useState();\r\n\r\nconst handlePress = (row, column) =>{\r\n        const newBoard = board.slice();\r\n        if(newBoard[row][column] === undefined){\r\n            newBoard[row][column] = player;\r\n            setBoard(newBoard);\r\n            if(isGameOvered()){\r\n                setWinner(player);\r\n            }\r\n            else {\r\n                setPlayer(1-player);\r\n            }\r\n        }\r\n    }\r\n\r\n    const isGameOvered = () =>{\r\n        return rowCrossed() || columnCrossed() || digonalCrossed();\r\n    }\r\n\r\n    const getBoxView = (row, column) =>(\r\n       <>\r\n       {board[row][column] === 0 && <img src={Zero} alt=\"empty\" width=\"40\" height=\"40\" /> }\r\n       {board[row][column] === 1 && <img src={Cross} alt=\"empty\" width=\"40\" height=\"40\" /> }\r\n       </>\r\n    )\r\n\r\n    const rowCrossed = () =>{\r\n        for(let i=0;i<3;i++){\r\n            if(board[i][0] === board[i][1] &&\r\n                board[i][1] === board[i][2] &&\r\n                board[i][0] !== undefined\r\n                ){\r\n                    return true;\r\n                }\r\n                return false;\r\n        }\r\n    }\r\n\r\n    const columnCrossed = () =>{\r\n        for(let j=0;j<3;j++){\r\n            if(board[0][j] === board[1][j] &&\r\n                board[1][j] === board[2][j] &&\r\n                board[0][j] !== undefined\r\n                ){\r\n                    return true;\r\n                }\r\n                return false;\r\n        }\r\n    }\r\n\r\n    const digonalCrossed = () =>{\r\n        if(board[0][0] === board[1][1] &&\r\n            board[1][1] === board[2][2] &&\r\n            board[0][0] !== undefined\r\n            ){\r\n                return true;\r\n            }\r\n            if(board[0][2] === board[1][1] &&\r\n                board[1][1] === board[2][0] &&\r\n                board[0][2] !== undefined\r\n                ){\r\n                    return true;\r\n                }\r\n                return false;\r\n    }\r\n\r\n    const handleClear = () =>{\r\n        setBoard([[],[],[]]);\r\n        setPlayer(0);\r\n        setWinner(undefined);\r\n    }\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <h1>TIC TAC TOE GAME</h1>\r\n        <div className=\"controls\">\r\n            <button className=\"clear\" onClick={handleClear}>START NEW GAME</button>\r\n        </div>\r\n        <div className=\"player\">\r\n            <div className={\"player1 \" + (player === 0 ? 'turn': 'wait')}>player 1</div>\r\n            <div className={\"player2 \" + (player === 1 ? 'turn': 'wait')}>player 2</div>\r\n        </div>\r\n        {winner !== undefined && (\r\n            <div className=\"winner\">Player {winner + 1} won this game</div>\r\n        )}\r\n        <div className=\"table_wrapper\">\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td onClick={() => handlePress(0,0)}>{getBoxView(0,0)}</td>\r\n                        <td onClick={() => handlePress(0,1)}>{getBoxView(0,1)}</td>\r\n                        <td onClick={() => handlePress(0,2)}>{getBoxView(0,2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td onClick={() => handlePress(1,0)}>{getBoxView(1,0)}</td>\r\n                        <td onClick={() => handlePress(1,1)}>{getBoxView(1,1)}</td>\r\n                        <td onClick={() => handlePress(1,2)}>{getBoxView(1,2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td onClick={() => handlePress(2,0)}>{getBoxView(2,0)}</td>\r\n                        <td onClick={() => handlePress(2,1)}>{getBoxView(2,1)}</td>\r\n                        <td onClick={() => handlePress(2,2)}>{getBoxView(2,2)}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Game;","import React from 'react';\nimport Game from './Game';\nimport './App.css';\n\n\nfunction App() {\n  return <Game />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}